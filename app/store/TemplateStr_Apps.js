/*
 * File: app/store/TemplateStr_Apps.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TemplateMetro.store.TemplateStr_Apps', {
    extend: 'Ext.data.Store',

    mixins: {
        persistence: 'cloudLibrary.store.LocalStore'
    },
    requires: [
        'TemplateMetro.model.TemplateMdl_App'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply(me.processTemplateStr_Apps({
            configuration: {
                localDB: 'siacloud_apps_list',
                useIndex: false,
                remote: false,
                source: '',
                target: '',
                complete: function(){ //Funzione chiamata al completamento della sync
                },
                onComplete: function(info){ //Funzione chiamata ad ogni sync
                },
                scope: this,
                live: false
            },
            autoLoad: true,
            model: 'TemplateMetro.model.TemplateMdl_App',
            storeId: 'TemplateStr_Apps'
        }), cfg)]);
    },

    processTemplateStr_Apps: function(config) {
        Ext.apply(config,this.configure(config));
        return config;
    },

    TemplateStr_Apps_CustomFilter: function(filterFN, field, scope) {
        if(typeof filterFN === 'function' && scope && field)
        {
            this.filterBy(function(record){
                var b = filterFN.call(scope,record);
                if(Ext.isBoolean(b)) return b;
                else return false; //If the function doesn't return a boolean value return false
            });
        }
    }

});